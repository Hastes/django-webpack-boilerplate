version: "3"

services:

  <NAME>_main:
    image: {{ project_name }}_ecotek_main
    restart: always
    command: python3 manage.py runserver 0.0.0.0:8000
    depends_on:
      - postgres
    volumes:
      - {{ project_name }}-main-static:/app/static
      - {{ project_name }}-main-media:/app/media
    environment:
      DEBUG: ${ECOTEK_DEBUG}
      SECRET_KEY: ${ECOTEK_SECRET_KEY}
      POSTGRES_DB_HOST: ${DB_HOST}
      POSTGRES_DB_PORT: ${DB_PORT}
      POSTGRES_DB_USER: ${DB_USER}
      POSTGRES_DB_PASS: ${DB_PASS}
      POSTGRES_DB_NAME: ${DB_NAME}
    networks:
      private_network:
        ipv4_address: 10.5.0.5

  postgres:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASS}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      private_network:
        ipv4_address: 10.5.0.6

  nginx:
    build: ./nginx
    restart: always
    ports:
      - 8000:8000
    volumes:
      - {{ project_name }}-main-static:/ecotek/ecotek-main/static
      - {{ project_name }}-main-media:/ecotek/ecotek-main/media
    networks:
      private_network:
        ipv4_address: 10.5.0.7
      default:

volumes:
  {{ project_name }}-main-static:
    external:
      name: {{ project_name }}-main-static
  {{ project_name }}-main-media:
    external:
      name: {{ project_name }}-main-media
  postgres-data:
    external:
      name: postgres-data

networks:
  private_network:
    ipam:
      driver: default
      config:
        - subnet: 10.5.0.0/16

